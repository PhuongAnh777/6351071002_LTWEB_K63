@using MvcBookStore.Models
@using PagedList.Mvc;
@model PagedList.PagedList<SACH>

@helper Truncate(string input, int length)
{
    if (input.Length < length)
    {
        @input
    }
    else
    {
        @input.Substring(0, length) <text>...</text>
    }
}
@{
    ViewBag.Title = "Sach";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>QUẢN LÝ THÔNG TIN SÁCH</h2>
<body style="margin-left: 5px">


    <p>
        @Html.ActionLink("THÊM MỚI", "Themmoisach")
    </p>
    <table class="table" border="1">
        <tr>
            <th style="width: 200px"> Tên sách</th>
            <th style="width: 100px"> Giá bán</th>
            <th style="width: 300px"> Mô tả</th>
            <th style="width: 120px"> Ảnh bìa</th>
            <th style="width: 150px"> Ngày cập nhật</th>
            <th style="width: 120px"> SL.Tồn</th>
            <th style="width: 120px"> Tên chủ đề</th>
            <th style="width: 120px"> Tên NXB</th>
            @*<th style="width: 100px"> SL.Xem</th>*@
            <th style="width: 200px"> </th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Tensach)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Dongia)
                </td>
                <td>
                    @Truncate(item.Mota, 100)
                </td>
                <td>
                    <img src="@Url.Content("~/img/Hinhdulieu/" + item.Hinhminhhoa)" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ngaycapnhat)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Soluongban)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CHUDE.TenChuDe)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NHAXUATBAN.TenNXB)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.solanxem)
                </td>*@
                <td>
                    @Html.ActionLink("Sửa", "Suasach", new { id = item.Masach }) |
                    @Html.ActionLink("Chi tiết", "Chitietsach", new { id = item.Masach }) |
                    @Html.ActionLink("Xóa", "Xoasach", new { id = item.Masach })
                </td>
            </tr>
        }

    </table>
    @*Tạo liên kết các trang*@
    Trang @(Model.PageCount<Model.PageNumber?0:Model.PageNumber)/@Model.PageCount
    <div class="MenuTrang">
        @Html.PagedListPager(Model, page => Url.Action("Sach", new { page = page }), new PagedListRenderOptions
         {
             DisplayLinkToFirstPage = PagedListDisplayMode.Always,
             DisplayLinkToLastPage = PagedListDisplayMode.Always,
             DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
             DisplayLinkToNextPage = PagedListDisplayMode.Always,
             DisplayLinkToIndividualPages = true,
             MaximumPageNumbersToDisplay = 5,
             ContainerDivClasses = new[] { "pagination" }

        })
    </div>

    <style>
        /* Styling for the pagination container */
        .pagination {
            display: flex;
            list-style: none;
            padding: 0;
        }

            /* Styling for each page item */
            .pagination li {
                margin: 0 5px;
            }

                /* Styling for links inside page items */
                .pagination li a {
                    display: block;
                    padding: 8px 12px;
                    color: #007bff;
                    text-decoration: none;
                    border-radius: 4px;
                    border: 1px solid #dee2e6;
                }

                    /* Hover effect for pagination links */
                    .pagination li a:hover {
                        background-color: #f8f9fa;
                    }

                /* Styling for the active page */
                .pagination li.active a {
                    color: #fff;
                    background-color: #007bff;
                    border-color: #007bff;
                }

                /* Styling for disabled links (e.g., first or previous when on the first page) */
                .pagination li.disabled a {
                    color: #6c757d;
                    pointer-events: none;
                    background-color: #fff;
                    border-color: #dee2e6;
                }
    </style>
</body>